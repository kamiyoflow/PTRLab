[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kamiyoflow\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kamiyoflow\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 205.3095ms
[debug]       Load.loadUnit: defsScala took 0.991ms
[debug] [Loading] Scanning directory C:\Users\kamiyoflow\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kamiyoflow\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.121 ms
[debug]           Load.resolveProject(global-plugins) took 120.7541ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kamiyoflow\.sbt\1.0\plugins, plugins: List(<none>))) took 219.8743ms
[debug] [Loading] Done in C:\Users\kamiyoflow\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 264.1815ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6875ms
[debug]     Load.loadUnit(file:/C:/Users/kamiyoflow/.sbt/1.0/plugins/, ...) took 492.8711ms
[debug]   Load.apply: load took 836.388ms
[debug]   Load.apply: resolveProjects took 8.6764ms
[debug]   Load.apply: finalTransforms took 106.5142ms
[debug]   Load.apply: config.delegates took 17.7136ms
[debug]   Load.apply: Def.make(settings)... took 723.8412ms
[debug]   Load.apply: structureIndex took 187.2133ms
[debug]   Load.apply: mkStreams took 2.6509ms
[info] loading global plugins from C:\Users\kamiyoflow\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3858.7871ms
[debug]           Load.loadUnit: plugins took 46.7592ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory G:\Scala\PTRLAB\project
[debug]             Load.loadUnit: mkEval took 8.4011ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Scala\PTRLAB\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.2522 ms
[info] loading settings for project ptrlab-build from idea.sbt ...
[debug]               Load.resolveProject(ptrlab-build) took 5.6408ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ptrlab-build, base: G:\Scala\PTRLAB\project, plugins: List(<none>))) took 9.7439ms
[debug] [Loading] Done in G:\Scala\PTRLAB\project, returning: (ptrlab-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 336.9119ms
[debug]           Load.loadUnit: cleanEvalClasses took 9.2108ms
[debug]         Load.loadUnit(file:/G:/Scala/PTRLAB/project/, ...) took 393.8838ms
[debug]       Load.apply: load took 396.349ms
[debug]       Load.apply: resolveProjects took 0.1508ms
[debug]       Load.apply: finalTransforms took 19.3804ms
[debug]       Load.apply: config.delegates took 0.5775ms
[debug]       Load.apply: Def.make(settings)... took 115.5824ms
[debug]       Load.apply: structureIndex took 56.8779ms
[debug]       Load.apply: mkStreams took 0.0027ms
[info] loading project definition from G:\Scala\PTRLAB\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2035.7394ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory G:\Scala\PTRLAB
[debug]       Load.loadUnit: mkEval took 0.2875ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Scala\PTRLAB, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.5652 ms
[info] loading settings for project ptrlab from build.sbt ...
[debug]         Load.resolveProject(ptrlab) took 80.0166ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ptrlab, base: G:\Scala\PTRLAB, plugins: List(<none>))) took 86.3105ms
[debug] [Loading] Done in G:\Scala\PTRLAB, returning: (ptrlab)
[debug]     Load.loadUnit: loadedProjectsRaw took 4649.0235ms
[debug]     Load.loadUnit: cleanEvalClasses took 33.2499ms
[debug]   Load.loadUnit(file:/G:/Scala/PTRLAB/, ...) took 6718.9158ms
[debug] Load.apply: load took 6723.2167ms
[debug] Load.apply: resolveProjects took 0.1455ms
[debug] Load.apply: finalTransforms took 66.8038ms
[debug] Load.apply: config.delegates took 1.3579ms
[debug] Load.apply: Def.make(settings)... took 201.9432ms
[debug] Load.apply: structureIndex took 133.1844ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to PTRLAB (in build file:/G:/Scala/PTRLAB/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58541 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58541, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PTRLAB (in build file:/G:/Scala/PTRLAB/)
[debug] > Exec(idea-shell, None, None)
