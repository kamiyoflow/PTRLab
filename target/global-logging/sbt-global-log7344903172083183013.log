[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kamiyoflow\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kamiyoflow\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 16.0.2)
[debug]       Load.loadUnit: plugins took 199.9384ms
[debug]       Load.loadUnit: defsScala took 0.9655ms
[debug] [Loading] Scanning directory C:\Users\kamiyoflow\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kamiyoflow\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.0777 ms
[debug]           Load.resolveProject(global-plugins) took 113.947ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kamiyoflow\.sbt\1.0\plugins, plugins: List(<none>))) took 185.1643ms
[debug] [Loading] Done in C:\Users\kamiyoflow\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 240.2152ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4546ms
[debug]     Load.loadUnit(file:/C:/Users/kamiyoflow/.sbt/1.0/plugins/, ...) took 460.7107ms
[debug]   Load.apply: load took 745.3005ms
[debug]   Load.apply: resolveProjects took 8.3209ms
[debug]   Load.apply: finalTransforms took 104.1785ms
[debug]   Load.apply: config.delegates took 22.5248ms
[debug]   Load.apply: Def.make(settings)... took 633.3391ms
[debug]   Load.apply: structureIndex took 153.2937ms
[debug]   Load.apply: mkStreams took 1.6829ms
[info] loading global plugins from C:\Users\kamiyoflow\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3525.0325ms
[debug]           Load.loadUnit: plugins took 43.6496ms
[debug]           Load.loadUnit: defsScala took 0.0072ms
[debug] [Loading] Scanning directory G:\Scala\PTRLAB\project
[debug]             Load.loadUnit: mkEval took 10.5691ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Scala\PTRLAB\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.801 ms
[info] loading settings for project ptrlab-build from idea.sbt ...
[debug]               Load.resolveProject(ptrlab-build) took 12.7997ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ptrlab-build, base: G:\Scala\PTRLAB\project, plugins: List(<none>))) took 16.2903ms
[debug] [Loading] Done in G:\Scala\PTRLAB\project, returning: (ptrlab-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2965.2191ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8285ms
[debug]         Load.loadUnit(file:/G:/Scala/PTRLAB/project/, ...) took 3015.8973ms
[debug]       Load.apply: load took 3018.2455ms
[debug]       Load.apply: resolveProjects took 0.157ms
[debug]       Load.apply: finalTransforms took 16.5507ms
[debug]       Load.apply: config.delegates took 0.4563ms
[debug]       Load.apply: Def.make(settings)... took 106.2706ms
[debug]       Load.apply: structureIndex took 49.294ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from G:\Scala\PTRLAB\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5823.5228ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory G:\Scala\PTRLAB
[debug]       Load.loadUnit: mkEval took 0.2609ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\Scala\PTRLAB, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.8729 ms
[info] loading settings for project ptrlab from build.sbt ...
[debug]         Load.resolveProject(ptrlab) took 44.3814ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ptrlab, base: G:\Scala\PTRLAB, plugins: List(<none>))) took 48.788ms
[debug] [Loading] Done in G:\Scala\PTRLAB, returning: (ptrlab)
[debug]     Load.loadUnit: loadedProjectsRaw took 2051.9017ms
[debug]     Load.loadUnit: cleanEvalClasses took 27.0626ms
[debug]   Load.loadUnit(file:/G:/Scala/PTRLAB/, ...) took 7903.347ms
[debug] Load.apply: load took 7905.5701ms
[debug] Load.apply: resolveProjects took 0.1272ms
[debug] Load.apply: finalTransforms took 31.2975ms
[debug] Load.apply: config.delegates took 0.355ms
[debug] Load.apply: Def.make(settings)... took 68.3791ms
[debug] Load.apply: structureIndex took 27.3778ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to PTRLAB (in build file:/G:/Scala/PTRLAB/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58599 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58599, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to PTRLAB (in build file:/G:/Scala/PTRLAB/)
[debug] > Exec(idea-shell, None, None)
